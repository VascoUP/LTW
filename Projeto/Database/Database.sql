.mode column
.headers on

CREATE TABLE User (
	User_ID NUMBER PRIMARY KEY,
	User_name CHAR[50] NOT NULL,
	Age NUMBER NOT NULL 
		CHECK(Age > 0),
	Profile_picture NUMBER,
	Bios CHAR[200],
	Address_ID NUMBER,
	FOREIGN KEY(Address_ID) REFERENCES Address(ID)
		ON DELETE SET NULL
		ON UPDATE CASCADE
);

CREATE TABLE Owners (
	User_ID NUMBER PRIMARY KEY,
	FOREIGN KEY(User_ID) REFERENCES User(User_ID)
		ON DELETE SET NULL
		ON UPDATE CASCADE
);

CREATE TABLE Reviewers (
	User_ID NUMBER PRIMARY KEY,
	FOREIGN KEY(User_ID) REFERENCES User(User_ID)
		ON DELETE SET NULL
		ON UPDATE CASCADE
);

CREATE TABLE Address (
	ID NUMBER PRIMARY KEY,
	StreetName CHAR[200],
	Latitude NUMBER,
	Longitude NUMBER 
);

CREATE TABLE Pictures (
	ID NUMBER PRIMARY KEY,
	Restaurant_ID NUMBER,
	User_ID NUMBER,
	FOREIGN KEY(Restaurant_ID) REFERENCES Restaurants(ID)
		ON DELETE SET NULL
		ON UPDATE CASCADE,
	FOREIGN KEY(User_ID) REFERENCES User(User_ID)
		ON DELETE SET NULL
		ON UPDATE CASCADE
);

CREATE TABLE Review (
	ID NUMBER PRIMARY KEY,
	User_ID NUMBER,
	Score NUMBER,
	DateReview Date,
	FOREIGN KEY(User_ID) REFERENCES Reviewers(Use_ID)
		ON DELETE SET NULL
		ON UPDATE CASCADE
);

CREATE TABLE Comment (
	ID NUMBER PRIMARY KEY,
	User_ID NUMBER,
	Content CHAR[1000],
	CommentDate Date,
	FOREIGN KEY(User_ID) REFERENCES Owners(User_ID)
		ON DELETE SET NULL
		ON UPDATE CASCADE
);

CREATE TABLE Restaurant (
	ID NUMBER PRIMARY KEY,
	Name CHAR[20] NOT NULL,
	NScores NUMBER,
	TotalScores NUMBER,
	Price NUMBER,
	OpenHours CHAR[500],
	Address_ID NUMBER,
	FOREIGN KEY(Address_ID) REFERENCES Address(ID)
		ON DELETE SET NULL
		ON UPDATE CASCADE
);

CREATE TABLE Menu (
	ID NUMBER PRIMARY KEY,
	Food CHAR[50],
	Price NUMBER,
	Category CHAR[50]
);

CREATE TABLE Category (
	ID NUMBER PRIMARY KEY,
	Category CHAR[50]
);



/* Association Tables */

CREATE TABLE OwnerRestaurant(
	Owner_ID NUMBER,
	Restaurant_ID NUMBER,
	PRIMARY KEY(Owner_ID, Restaurant_ID),
	FOREIGN KEY(Owner_ID) REFERENCES Owners(User_ID)
		ON DELETE SET NULL
		ON UPDATE CASCADE,
	FOREIGN KEY(Restaurant_ID) REFERENCES Restaurant(ID)
		ON DELETE SET NULL
		ON UPDATE CASCADE
);

CREATE TABLE MenuRestaurant (
	Restaurant_ID NUMBER,
	Menu_ID NUMBER,
	PRIMARY KEY(Restaurant_ID, Menu_ID),
	FOREIGN KEY(Restaurant_ID) REFERENCES Restaurant(ID)
		ON DELETE SET NULL
		ON UPDATE CASCADE,
	FOREIGN KEY(Menu_ID) REFERENCES Menu(ID)
		ON DELETE SET NULL
		ON UPDATE CASCADE
);

CREATE TABLE RestaurantCategory (
	Restaurant_ID NUMBER,
	Category_ID NUMBER,
	PRIMARY KEY(Restaurant_ID, Category_ID),
	FOREIGN KEY(Restaurant_ID) REFERENCES Restaurant(ID)
		ON DELETE SET NULL
		ON UPDATE CASCADE,
	FOREIGN KEY(Category_ID) REFERENCES Category(ID)
		ON DELETE SET NULL
		ON UPDATE CASCADE

);

CREATE TABLE RestaurantReviews (
	Restaurant_ID NUMBER,
	Review_ID NUMBER,
	PRIMARY KEY(Restaurant_ID, Review_ID),
	FOREIGN KEY(Restaurant_ID) REFERENCES Restaurant(ID)
		ON DELETE SET NULL
		ON UPDATE CASCADE,
	FOREIGN KEY(Review_ID) REFERENCES Review(ID)
		ON DELETE SET NULL
		ON UPDATE CASCADE
);

CREATE TABLE ReviewComments (
	Review_ID NUMBER,
	Comment_ID NUMBER,
	PRIMARY KEY(Review_ID, Comment_ID),
	FOREIGN KEY(Review_ID) REFERENCES Review(ID)
		ON DELETE SET NULL
		ON UPDATE CASCADE,
	FOREIGN KEY(Comment_ID) REFERENCES Comment(ID)
		ON DELETE SET NULL
		ON UPDATE CASCADE

);

